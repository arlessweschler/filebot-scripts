{ import groovy.json.JsonSlurper
  import groovy.json.JsonOutput
  import net.filebot.similarity.SimilarityMetric
  import net.filebot.similarity.NameSimilarityMetric
  import net.filebot.similarity.SubstringMetric

  def url = new URL("https://passthepopcorn.me/torrents.php?searchstr=$n&scene=2&resolution=$vf")
  def requestHeaders = [
    "Accept": "application/json",
    "ApiUser": "{{ ptp.apiuser }}",
    "ApiKey": "{{ ptp.apikey }}"
  ]

  SimilarityMetric metric = new NameSimilarityMetric()
  def result = url.get(requestHeaders).text
  def json = new JsonSlurper().parseText(result)
  if (json.TotalResults > 0) {
    // String    group = "VietHD"
    ArrayList gpCandidates = json.Movies*.Torrents*.findAll {
        // it.ReleaseGroup ==~ /(?i)$group/ &&
        it.Resolution == vf &&
        it.GoldenPopcorn
    }

    Float best = json*.collect { [
      "name": it.ReleaseName,
      "similarity": metric.getSimilarity(it.ReleaseName, prime)
    ] }*.max { a, b -> a["similarity"] <=> b["similarity"] }.similarity.first()

    // Boolean gp = best >= 0.8
    // if (gp) { return "(GP)" }

    String gp
    switch (best) {
      case { it == 1.0 }:
        gp = "GP"
        break
      case { it >= 0.7 }:
        gp = "\u2248GP"
        break
      default:
        gp = null
        break
    }

    return gp
  }
}

/*
  values.sort { o1, o2 ->
    return Float.compare(o1["similarity"], o2["similarity"])
  }
  values.any {
    metric.getSimilarity(it, prime) == 1 || metric.getSimilarity(it, prime) > 0.9
  }
*/